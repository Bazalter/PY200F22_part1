type: output
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 371
    length: 46
    placeholder_text: |-
      # TODO  инициализировать атрибуты экземпляра класса Node
              ...
    initial_state:
      length: 46
      offset: 371
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      # TODO  инициализировать атрибуты экземпляра класса Node
              ...
  - offset: 423
    length: 70
    placeholder_text: '# TODO реализовать метод __repr__ для отображения экземпляра'
    initial_state:
      length: 70
      offset: 423
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: '# TODO реализовать метод __repr__ для отображения
      экземпляра'
  - offset: 574
    length: 0
    placeholder_text: "...  # TODO инициализировать первый узел"
    initial_state:
      length: 0
      offset: 574
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: "...  # TODO инициализировать первый узел"
  - offset: 575
    length: 0
    placeholder_text: "...  # TODO инициализировать второй узел"
    initial_state:
      length: 0
      offset: 575
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: "...  # TODO инициализировать второй узел"
  - offset: 599
    length: 11
    placeholder_text: "...  # TODO через атрибут экземпляра устанавливаем первому\
      \ узлу следующий узел"
    initial_state:
      length: 11
      offset: 599
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: "...  # TODO через атрибут экземпляра устанавливаем\
      \ первому узлу следующий узел"
  text: |
    from typing import Any, Optional


    class Node:
        """ Класс, который описывает узел связного списка. """

        def __init__(self, value: Any, next_: Optional["Node"] = None):
            """
            Создаем новый узел для односвязного списка
            :param value: Любое значение, которое помещено в узел
            :param next_: следующий узел, если он есть
            """
            # TODO  инициализировать атрибуты экземпляра класса Node
            ...

        # TODO реализовать метод __repr__ для отображения экземпляра


    if __name__ == '__main__':
        first_node = ...  # TODO инициализировать первый узел

        second_node = ...  # TODO инициализировать второй узел
        first_node.next = ...  # TODO через атрибут экземпляра устанавливаем первому узлу следующий узел

        print(first_node)
        print(second_node)
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    Node(1, Node(2, None))
    Node(2, None)
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Sun, 14 Jan 2024 11:42:08 UTC"
record: -1
